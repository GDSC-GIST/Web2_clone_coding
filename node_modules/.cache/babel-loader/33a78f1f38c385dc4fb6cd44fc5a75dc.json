{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjae/GDSC/Web2_clone_coding/src/components/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { fbAuth } from '../fbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n\n  const onChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n\n    if (name === 'email') {\n      setEmail(value);\n      console.log('email');\n    } else if (name === 'password') {\n      setPassword(value);\n      console.log('password');\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let data;\n\n    try {\n      if (newAccount) {\n        data = await fbAuth.createUserWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      } else {\n        data = await fbAuth.signInWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      }\n\n      console.log('In Auth.js > onSubmit()');\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Email\",\n        required: true,\n        value: email,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: onChange,\n        className: \"authInput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: newAccount ? 'Create Account' : 'Log In',\n        className: \"authInput authSubmit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleAccount,\n      children: newAccount ? 'Log In' : 'Sign in'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AuthForm, \"JKBEcZ85NZn6qbVUf0Wb625QzjM=\");\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/yoonjae/GDSC/Web2_clone_coding/src/components/AuthForm.js"],"names":["React","useState","fbAuth","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","event","target","name","value","console","log","onSubmit","preventDefault","data","createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","err","toggleAccount","prev"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {fbAuth} from '../fbase';\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [newAccount, setNewAccount] = useState(true);\n\n  const onChange = (event) => {\n    const {\n      target: {name, value},\n    } = event;\n    if (name === 'email') {\n      setEmail(value);\n      console.log('email');\n    } else if (name === 'password') {\n      setPassword(value);\n      console.log('password');\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let data;\n    try {\n      if (newAccount) {\n        data = await fbAuth.createUserWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      } else {\n        data = await fbAuth.signInWithEmailAndPassword(fbAuth.getAuth(), email, password);\n      }\n      console.log('In Auth.js > onSubmit()');\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount((prev) => !prev);\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? 'Create Account' : 'Log In'} className=\"authInput authSubmit\" />\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? 'Log In' : 'Sign in'}</span>\n    </>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}