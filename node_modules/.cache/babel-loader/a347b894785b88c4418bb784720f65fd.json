{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjae/GDSC/Web2_clone_coding/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fbStore } from '../fbase';\nimport Nweet from '../components/Nweet';\nimport NweetFactory from '../components/NweetFactory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [nweets, setNweets] = useState([]);\n  /*const getNweets = async () => {\n    // 특정 collection 이름을 가지고 docs 가져오기\n    const dbNweets = await fbStore.getDocs(fbStore.collection(fbStore.getFirestore(), 'nweets'));\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n      // console.log(document.data())\n    });\n    console.log(dbNweets);\n  };*/\n\n  useEffect(() => {\n    // getNweets();\n    const q = fbStore.query(fbStore.collection(fbStore.getFirestore(), 'nweets'), // fbStore.where('text' '==', 'hehe')\n    fbStore.orderBy('createdAt', 'desc'));\n    const unsubscribe = fbStore.onSnapshot(q, querySnapshot => {\n      const newArray = querySnapshot.docs.map(doc => {\n        // console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      setNweets(newArray); // console.log('Current nweets in CA: ', newArray);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NweetFactory, {\n      userObj: props.userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweetObj => {\n        return /*#__PURE__*/_jsxDEV(Nweet, {\n          nweetObj: nweetObj,\n          isOwner: nweetObj.creatorId === props.userObj.uid\n        }, nweetObj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"jDqDnSO4GLbd/Tgp4zZ7a6CUJZQ=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yoonjae/GDSC/Web2_clone_coding/src/routes/Home.js"],"names":["React","useState","useEffect","fbStore","Nweet","NweetFactory","Home","props","nweets","setNweets","q","query","collection","getFirestore","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","doc","id","data","userObj","nweetObj","creatorId","uid"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACEC,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMQ,CAAC,GAAGP,OAAO,CAACQ,KAAR,CACRR,OAAO,CAACS,UAAR,CAAmBT,OAAO,CAACU,YAAR,EAAnB,EAA2C,QAA3C,CADQ,EAER;AACAV,IAAAA,OAAO,CAACW,OAAR,CAAgB,WAAhB,EAA6B,MAA7B,CAHQ,CAAV;AAKA,UAAMC,WAAW,GAAGZ,OAAO,CAACa,UAAR,CAAmBN,CAAnB,EAAuBO,aAAD,IAAmB;AAC3D,YAAMC,QAAQ,GAAGD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAwBC,GAAD,IAAS;AAC/C;AACA,eAAO;AACLC,UAAAA,EAAE,EAAED,GAAG,CAACC,EADH;AAEL,aAAGD,GAAG,CAACE,IAAJ;AAFE,SAAP;AAID,OANgB,CAAjB;AAOAd,MAAAA,SAAS,CAACS,QAAD,CAAT,CAR2D,CAS3D;AACD,KAVmB,CAApB;AAWD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEX,KAAK,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGhB,MAAM,CAACY,GAAP,CAAYK,QAAD,IAAc;AACxB,4BAAO,QAAC,KAAD;AAAyB,UAAA,QAAQ,EAAEA,QAAnC;AAA6C,UAAA,OAAO,EAAEA,QAAQ,CAACC,SAAT,KAAuBnB,KAAK,CAACiB,OAAN,CAAcG;AAA3F,WAAYF,QAAQ,CAACH,EAArB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA7CD;;GAAMhB,I;;KAAAA,I;AA8CN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fbStore} from '../fbase';\nimport Nweet from '../components/Nweet';\nimport NweetFactory from '../components/NweetFactory';\n\nconst Home = (props) => {\n  const [nweets, setNweets] = useState([]);\n  /*const getNweets = async () => {\n    // 특정 collection 이름을 가지고 docs 가져오기\n    const dbNweets = await fbStore.getDocs(fbStore.collection(fbStore.getFirestore(), 'nweets'));\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n      // console.log(document.data())\n    });\n    console.log(dbNweets);\n  };*/\n  useEffect(() => {\n    // getNweets();\n    const q = fbStore.query(\n      fbStore.collection(fbStore.getFirestore(), 'nweets'),\n      // fbStore.where('text' '==', 'hehe')\n      fbStore.orderBy('createdAt', 'desc')\n    );\n    const unsubscribe = fbStore.onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        // console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n      // console.log('Current nweets in CA: ', newArray);\n    });\n  }, []);\n\n  return (\n    <div>\n      <NweetFactory userObj={props.userObj}></NweetFactory>\n      <div>\n        {nweets.map((nweetObj) => {\n          return <Nweet key={nweetObj.id} nweetObj={nweetObj} isOwner={nweetObj.creatorId === props.userObj.uid}></Nweet>;\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}