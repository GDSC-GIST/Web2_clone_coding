{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjae/GDSC/Web2_clone_coding/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport AppRouter from './Router';\nimport { fbAuth } from '../fbase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // console.log('App()');\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(fbAuth.getAuth().currentUser);\n  const [userObj, setUserObj] = useState(null); // console.log(authService.currentUser);\n\n  useEffect(() => {\n    fbAuth.getAuth().onAuthStateChanged(user => {\n      if (user) {\n        if (user.displayName == null) {\n          const ind = user.email.indexOf('@');\n          const end = user.email.substring(0, ind);\n          fbAuth.updateProfile(user, {\n            displayName: end\n          });\n        }\n\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      } // console.log(user);\n\n\n      setInit(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: init ? /*#__PURE__*/_jsxDEV(AppRouter, {\n      isLoggedIn: isLoggedIn,\n      userObj: userObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this) : 'Initializing..'\n  }, void 0, false);\n}\n\n_s(App, \"1N0ZtuF4/zpvmEvORHopDkRjCcc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yoonjae/GDSC/Web2_clone_coding/src/components/App.js"],"names":["React","useEffect","useState","AppRouter","fbAuth","App","init","setInit","isLoggedIn","setIsLoggedIn","getAuth","currentUser","userObj","setUserObj","onAuthStateChanged","user","displayName","ind","email","indexOf","end","substring","updateProfile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAAQC,MAAR,QAAqB,UAArB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACE,MAAM,CAACM,OAAP,GAAiBC,WAAlB,CAA5C;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAJa,CAKb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACM,OAAP,GAAiBI,kBAAjB,CAAqCC,IAAD,IAAU;AAC5C,UAAIA,IAAJ,EAAU;AACR,YAAIA,IAAI,CAACC,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,gBAAMC,GAAG,GAAGF,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmB,GAAnB,CAAZ;AACA,gBAAMC,GAAG,GAAGL,IAAI,CAACG,KAAL,CAAWG,SAAX,CAAqB,CAArB,EAAwBJ,GAAxB,CAAZ;AACAb,UAAAA,MAAM,CAACkB,aAAP,CAAqBP,IAArB,EAA2B;AAACC,YAAAA,WAAW,EAAEI;AAAd,WAA3B;AACD;;AACDX,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAI,QAAAA,UAAU,CAACE,IAAD,CAAV;AACD,OARD,MAQO;AACLN,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAX2C,CAY5C;;;AACAF,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBAAO;AAAA,cAAGD,IAAI,gBAAG,QAAC,SAAD;AAAW,MAAA,UAAU,EAAEE,UAAvB;AAAmC,MAAA,OAAO,EAAEI;AAA5C;AAAA;AAAA;AAAA;AAAA,YAAH,GAAuE;AAA9E,mBAAP;AACD;;GAzBQP,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport AppRouter from './Router';\nimport {fbAuth} from '../fbase';\n\nfunction App() {\n  // console.log('App()');\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(fbAuth.getAuth().currentUser);\n  const [userObj, setUserObj] = useState(null);\n  // console.log(authService.currentUser);\n  useEffect(() => {\n    fbAuth.getAuth().onAuthStateChanged((user) => {\n      if (user) {\n        if (user.displayName == null) {\n          const ind = user.email.indexOf('@');\n          const end = user.email.substring(0, ind);\n          fbAuth.updateProfile(user, {displayName: end});\n        }\n        setIsLoggedIn(true);\n        setUserObj(user);\n      } else {\n        setIsLoggedIn(false);\n      }\n      // console.log(user);\n      setInit(true);\n    });\n  }, []);\n\n  return <>{init ? <AppRouter isLoggedIn={isLoggedIn} userObj={userObj}></AppRouter> : 'Initializing..'}</>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}