{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjae/GDSC/Web2_clone_coding/src/routes/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Nweet from '../components/Nweet';\nimport { v4 as uuidv4 } from 'uuid';\nimport { fbStore } from '../fbase';\nimport { fbStorage } from '../fbase';\nimport { getDownloadURL } from '@firebase/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = props => {\n  _s();\n\n  const [nweet, setNweet] = useState('');\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState('');\n  /*const getNweets = async () => {\n    // 특정 collection 이름을 가지고 docs 가져오기\n    const dbNweets = await fbStore.getDocs(fbStore.collection(fbStore.getFirestore(), 'nweets'));\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n      // console.log(document.data())\n    });\n    console.log(dbNweets);\n  };*/\n\n  useEffect(() => {\n    // getNweets();\n    const q = fbStore.query(fbStore.collection(fbStore.getFirestore(), 'nweets'), // fbStore.where('text' '==', 'hehe')\n    fbStore.orderBy('createdAt', 'desc'));\n    const unsubscribe = fbStore.onSnapshot(q, querySnapshot => {\n      const newArray = querySnapshot.docs.map(doc => {\n        // console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n      setNweets(newArray); // console.log('Current nweets in CA: ', newArray);\n    });\n  }, []);\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    let attachmentUrl = '';\n\n    if (attachment !== '') {\n      const attachmentRef = fbStorage.ref(fbStorage.getStorage(), `${props.userObj.uid}/${uuidv4()}`);\n      const response = await fbStorage.uploadString(attachmentRef, attachment, 'data_url');\n      attachmentUrl = await fbStorage.getDownloadURL(response.ref);\n    }\n\n    await fbStore.addDoc(fbStore.collection(fbStore.getFirestore(), 'nweets'), {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: props.userObj.uid,\n      attachmentUrl\n    });\n    setNweet('');\n    setAttachment('');\n  };\n\n  const onChange = event => {\n    const {\n      target: {\n        value\n      }\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    // console.log(event.target.files);\n    const {\n      target: {\n        files\n      }\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: {\n          result\n        }\n      } = finishedEvent;\n      console.log(finishedEvent);\n      setAttachment(result);\n    };\n\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onChange,\n        placeholder: \"What's on your mind?\",\n        maxLength: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: onFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Nweet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), attachment && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: attachment,\n          alt: \"attachment\",\n          width: \"50px\",\n          height: \"50px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClearAttachment,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: nweets.map(nweetObj => {\n        return /*#__PURE__*/_jsxDEV(Nweet, {\n          nweetObj: nweetObj,\n          isOwner: nweetObj.creatorId === props.userObj.uid\n        }, nweetObj.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"EXY3p+yJchRabjysIF0KK3gM9As=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yoonjae/GDSC/Web2_clone_coding/src/routes/Home.js"],"names":["React","useState","useEffect","Nweet","v4","uuidv4","fbStore","fbStorage","getDownloadURL","Home","props","nweet","setNweet","nweets","setNweets","attachment","setAttachment","q","query","collection","getFirestore","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","doc","id","data","onSubmit","event","preventDefault","attachmentUrl","attachmentRef","ref","getStorage","userObj","uid","response","uploadString","addDoc","text","createdAt","Date","now","creatorId","onChange","target","value","onFileChange","files","theFile","reader","FileReader","onloadend","finishedEvent","currentTarget","result","console","log","readAsDataURL","onClearAttachment","nweetObj"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Nweet from '../components/Nweet';\nimport {v4 as uuidv4} from 'uuid';\nimport {fbStore} from '../fbase';\nimport {fbStorage} from '../fbase';\nimport {getDownloadURL} from '@firebase/storage';\n\nconst Home = (props) => {\n  const [nweet, setNweet] = useState('');\n  const [nweets, setNweets] = useState([]);\n  const [attachment, setAttachment] = useState('');\n  /*const getNweets = async () => {\n    // 특정 collection 이름을 가지고 docs 가져오기\n    const dbNweets = await fbStore.getDocs(fbStore.collection(fbStore.getFirestore(), 'nweets'));\n    dbNweets.forEach((document) => {\n      const nweetObject = {\n        ...document.data(),\n        id: document.id,\n      };\n      setNweets((prev) => [nweetObject, ...prev]);\n      // console.log(document.data())\n    });\n    console.log(dbNweets);\n  };*/\n  useEffect(() => {\n    // getNweets();\n    const q = fbStore.query(\n      fbStore.collection(fbStore.getFirestore(), 'nweets'),\n      // fbStore.where('text' '==', 'hehe')\n      fbStore.orderBy('createdAt', 'desc')\n    );\n    const unsubscribe = fbStore.onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        // console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n      // console.log('Current nweets in CA: ', newArray);\n    });\n  }, []);\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = '';\n    if (attachment !== '') {\n      const attachmentRef = fbStorage.ref(fbStorage.getStorage(), `${props.userObj.uid}/${uuidv4()}`);\n      const response = await fbStorage.uploadString(attachmentRef, attachment, 'data_url');\n      attachmentUrl = await fbStorage.getDownloadURL(response.ref);\n    }\n    await fbStore.addDoc(fbStore.collection(fbStore.getFirestore(), 'nweets'), {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: props.userObj.uid,\n      attachmentUrl,\n    });\n    setNweet('');\n    setAttachment('');\n  };\n  const onChange = (event) => {\n    const {\n      target: {value},\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    // console.log(event.target.files);\n    const {\n      target: {files},\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: {result},\n      } = finishedEvent;\n      console.log(finishedEvent);\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment('');\n  };\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" onChange={onChange} placeholder=\"What's on your mind?\" maxLength={120} />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n          <div>\n            <img src={attachment} alt=\"attachment\" width=\"50px\" height=\"50px\"></img>\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n      <div>\n        {nweets.map((nweetObj) => {\n          return <Nweet key={nweetObj.id} nweetObj={nweetObj} isOwner={nweetObj.creatorId === props.userObj.uid}></Nweet>;\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}